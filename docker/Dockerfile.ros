ARG BASE_DIST
ARG CUDA_VERSION
ARG GITLAB_USERNAME
ARG GITLAB_TOKEN

FROM nvidia/cuda:${CUDA_VERSION}-base-${BASE_DIST}
SHELL ["/bin/bash", "-c"] 
# Timezone Configuration
ENV TZ=Europe/Moscow
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

RUN apt update && apt install -y git \
                                cmake \
                                clang \
                                python3 \
                                python3-dev \
                                python3-pip \
                                python3-distutils \
                                libpython3-dev \
                                libeigen3-dev 

RUN apt install -y vim nano

# Python package install
RUN pip3 install --upgrade pip
RUN pip3 install numpy scipy matplotlib

# ROS2 Install
ENV ROS2_DISTRO=galactic
RUN apt install -y software-properties-common
RUN add-apt-repository universe
RUN apt update && apt install -y curl gnupg lsb-release
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(source /etc/os-release && echo $UBUNTU_CODENAME) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null
RUN apt update
RUN apt upgrade -y
RUN apt install -y ros-$ROS2_DISTRO-ros-base
RUN apt install -y ros-dev-tools
RUN echo "source /opt/ros/$ROS2_DISTRO/setup.bash"  >> ~/.bashrc


# RaiSim Dependency Install
RUN apt install -y minizip ffmpeg

# ROS1 Install
ENV ROS1_DISTRO=noetic
RUN echo "deb http://packages.ros.org/ros/ubuntu focal main" | tee /etc/apt/sources.list.d/ros-focal.list
RUN apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
RUN curl -sSL 'http://keyserver.ubuntu.com/pks/lookup?op=get&search=0xC1CF6E31E6BADE8868B172B4F42ED6FBAB17C654' | apt-key add -
RUN apt update
RUN apt install -y ros-$ROS1_DISTRO-ros-base
RUN echo "source /opt/ros/$ROS1_DISTRO/setup.bash"  >> ~/.bashrc
RUN apt install -y python3-rosdep python3-rosinstall python3-rosinstall-generator python3-wstool build-essential
RUN apt install -y python3-rosdep
RUN rosdep init && rosdep update

# Install ROS1 Dependency
RUN sh \
    -c 'echo "deb http://packages.ros.org/ros/ubuntu `lsb_release -sc` main" \
        > /etc/apt/sources.list.d/ros-latest.list'
RUN wget http://packages.ros.org/ros.key -O - | sudo apt-key add -
RUN apt update
RUN apt install -y python3-catkin-tools
RUN apt install -y ros-$ROS1_DISTRO-tf
RUN apt install -y ros-$ROS1_DISTRO-pcl-conversions ros-$ROS1_DISTRO-pcl-ros ros-$ROS1_DISTRO-grid-map
RUN apt install -y ros-$ROS1_DISTRO-cv-bridge ros-$ROS1_DISTRO-costmap-2d 
RUN apt install -y ros-$ROS1_DISTRO-filters ros-$ROS1_DISTRO-octomap ros-$ROS1_DISTRO-octomap-msgs
RUN apt install -y ros-$ROS1_DISTRO-rviz ros-$ROS1_DISTRO-xacro
RUN apt install -y ros-$ROS1_DISTRO-joy ros-$ROS1_DISTRO-robot-state-publisher

# Common ROS configuring
RUN source ~/.bashrc

COPY workspace/activation.raisim /root/.raisim/activation.raisim


# Install lcm (https://lcm-proj.github.io/build_instructions.html)
# This is a dirty dependency, I dont know why it used in simulator -_- 
RUN apt install -y libglib2.0-dev
COPY workspace/lcm /workspace/lcm
RUN cd /workspace/lcm && mkdir build \
    && cd build && cmake .. \
    && make && make install
